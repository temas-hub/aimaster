// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerInfo.proto

package com.temas.aimaster;

public final class ServerInfo {
  private ServerInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TargetInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.temas.aimaster.TargetInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
     */
    boolean hasPosition();
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
     */
    com.temas.aimaster.Common.Vector2 getPosition();
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
     */
    com.temas.aimaster.Common.Vector2OrBuilder getPositionOrBuilder();

    /**
     * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
     */
    boolean hasMoveDir();
    /**
     * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
     */
    com.temas.aimaster.Common.Vector2 getMoveDir();
    /**
     * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
     */
    com.temas.aimaster.Common.Vector2OrBuilder getMoveDirOrBuilder();

    /**
     * <code>optional float radius = 3;</code>
     */
    float getRadius();

    /**
     * <code>optional float speed = 4;</code>
     */
    float getSpeed();
  }
  /**
   * Protobuf type {@code com.temas.aimaster.TargetInfo}
   */
  public  static final class TargetInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.temas.aimaster.TargetInfo)
      TargetInfoOrBuilder {
    // Use TargetInfo.newBuilder() to construct.
    private TargetInfo(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private TargetInfo() {
      radius_ = 0F;
      speed_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TargetInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.temas.aimaster.Common.Vector2.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(com.temas.aimaster.Common.Vector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.temas.aimaster.Common.Vector2.Builder subBuilder = null;
              if (moveDir_ != null) {
                subBuilder = moveDir_.toBuilder();
              }
              moveDir_ = input.readMessage(com.temas.aimaster.Common.Vector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(moveDir_);
                moveDir_ = subBuilder.buildPartial();
              }

              break;
            }
            case 29: {

              radius_ = input.readFloat();
              break;
            }
            case 37: {

              speed_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_TargetInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_TargetInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.temas.aimaster.ServerInfo.TargetInfo.class, com.temas.aimaster.ServerInfo.TargetInfo.Builder.class);
    }

    public static final int POSITION_FIELD_NUMBER = 1;
    private com.temas.aimaster.Common.Vector2 position_;
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
     */
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
     */
    public com.temas.aimaster.Common.Vector2 getPosition() {
      return position_ == null ? com.temas.aimaster.Common.Vector2.getDefaultInstance() : position_;
    }
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
     */
    public com.temas.aimaster.Common.Vector2OrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int MOVEDIR_FIELD_NUMBER = 2;
    private com.temas.aimaster.Common.Vector2 moveDir_;
    /**
     * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
     */
    public boolean hasMoveDir() {
      return moveDir_ != null;
    }
    /**
     * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
     */
    public com.temas.aimaster.Common.Vector2 getMoveDir() {
      return moveDir_ == null ? com.temas.aimaster.Common.Vector2.getDefaultInstance() : moveDir_;
    }
    /**
     * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
     */
    public com.temas.aimaster.Common.Vector2OrBuilder getMoveDirOrBuilder() {
      return getMoveDir();
    }

    public static final int RADIUS_FIELD_NUMBER = 3;
    private float radius_;
    /**
     * <code>optional float radius = 3;</code>
     */
    public float getRadius() {
      return radius_;
    }

    public static final int SPEED_FIELD_NUMBER = 4;
    private float speed_;
    /**
     * <code>optional float speed = 4;</code>
     */
    public float getSpeed() {
      return speed_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (position_ != null) {
        output.writeMessage(1, getPosition());
      }
      if (moveDir_ != null) {
        output.writeMessage(2, getMoveDir());
      }
      if (radius_ != 0F) {
        output.writeFloat(3, radius_);
      }
      if (speed_ != 0F) {
        output.writeFloat(4, speed_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPosition());
      }
      if (moveDir_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMoveDir());
      }
      if (radius_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, radius_);
      }
      if (speed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, speed_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.temas.aimaster.ServerInfo.TargetInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.temas.aimaster.ServerInfo.TargetInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.TargetInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.temas.aimaster.ServerInfo.TargetInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.TargetInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.temas.aimaster.ServerInfo.TargetInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.TargetInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.temas.aimaster.ServerInfo.TargetInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.TargetInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.temas.aimaster.ServerInfo.TargetInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.temas.aimaster.ServerInfo.TargetInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.temas.aimaster.TargetInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.temas.aimaster.TargetInfo)
        com.temas.aimaster.ServerInfo.TargetInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_TargetInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_TargetInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.temas.aimaster.ServerInfo.TargetInfo.class, com.temas.aimaster.ServerInfo.TargetInfo.Builder.class);
      }

      // Construct using com.temas.aimaster.ServerInfo.TargetInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        if (moveDirBuilder_ == null) {
          moveDir_ = null;
        } else {
          moveDir_ = null;
          moveDirBuilder_ = null;
        }
        radius_ = 0F;

        speed_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_TargetInfo_descriptor;
      }

      public com.temas.aimaster.ServerInfo.TargetInfo getDefaultInstanceForType() {
        return com.temas.aimaster.ServerInfo.TargetInfo.getDefaultInstance();
      }

      public com.temas.aimaster.ServerInfo.TargetInfo build() {
        com.temas.aimaster.ServerInfo.TargetInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.temas.aimaster.ServerInfo.TargetInfo buildPartial() {
        com.temas.aimaster.ServerInfo.TargetInfo result = new com.temas.aimaster.ServerInfo.TargetInfo(this);
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (moveDirBuilder_ == null) {
          result.moveDir_ = moveDir_;
        } else {
          result.moveDir_ = moveDirBuilder_.build();
        }
        result.radius_ = radius_;
        result.speed_ = speed_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.temas.aimaster.ServerInfo.TargetInfo) {
          return mergeFrom((com.temas.aimaster.ServerInfo.TargetInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.temas.aimaster.ServerInfo.TargetInfo other) {
        if (other == com.temas.aimaster.ServerInfo.TargetInfo.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasMoveDir()) {
          mergeMoveDir(other.getMoveDir());
        }
        if (other.getRadius() != 0F) {
          setRadius(other.getRadius());
        }
        if (other.getSpeed() != 0F) {
          setSpeed(other.getSpeed());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.temas.aimaster.ServerInfo.TargetInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.temas.aimaster.ServerInfo.TargetInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.temas.aimaster.Common.Vector2 position_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder> positionBuilder_;
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
       */
      public com.temas.aimaster.Common.Vector2 getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? com.temas.aimaster.Common.Vector2.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
       */
      public Builder setPosition(com.temas.aimaster.Common.Vector2 value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
       */
      public Builder setPosition(
          com.temas.aimaster.Common.Vector2.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
       */
      public Builder mergePosition(com.temas.aimaster.Common.Vector2 value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              com.temas.aimaster.Common.Vector2.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
       */
      public com.temas.aimaster.Common.Vector2.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
       */
      public com.temas.aimaster.Common.Vector2OrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              com.temas.aimaster.Common.Vector2.getDefaultInstance() : position_;
        }
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private com.temas.aimaster.Common.Vector2 moveDir_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder> moveDirBuilder_;
      /**
       * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
       */
      public boolean hasMoveDir() {
        return moveDirBuilder_ != null || moveDir_ != null;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
       */
      public com.temas.aimaster.Common.Vector2 getMoveDir() {
        if (moveDirBuilder_ == null) {
          return moveDir_ == null ? com.temas.aimaster.Common.Vector2.getDefaultInstance() : moveDir_;
        } else {
          return moveDirBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
       */
      public Builder setMoveDir(com.temas.aimaster.Common.Vector2 value) {
        if (moveDirBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          moveDir_ = value;
          onChanged();
        } else {
          moveDirBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
       */
      public Builder setMoveDir(
          com.temas.aimaster.Common.Vector2.Builder builderForValue) {
        if (moveDirBuilder_ == null) {
          moveDir_ = builderForValue.build();
          onChanged();
        } else {
          moveDirBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
       */
      public Builder mergeMoveDir(com.temas.aimaster.Common.Vector2 value) {
        if (moveDirBuilder_ == null) {
          if (moveDir_ != null) {
            moveDir_ =
              com.temas.aimaster.Common.Vector2.newBuilder(moveDir_).mergeFrom(value).buildPartial();
          } else {
            moveDir_ = value;
          }
          onChanged();
        } else {
          moveDirBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
       */
      public Builder clearMoveDir() {
        if (moveDirBuilder_ == null) {
          moveDir_ = null;
          onChanged();
        } else {
          moveDir_ = null;
          moveDirBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
       */
      public com.temas.aimaster.Common.Vector2.Builder getMoveDirBuilder() {
        
        onChanged();
        return getMoveDirFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
       */
      public com.temas.aimaster.Common.Vector2OrBuilder getMoveDirOrBuilder() {
        if (moveDirBuilder_ != null) {
          return moveDirBuilder_.getMessageOrBuilder();
        } else {
          return moveDir_ == null ?
              com.temas.aimaster.Common.Vector2.getDefaultInstance() : moveDir_;
        }
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 moveDir = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder> 
          getMoveDirFieldBuilder() {
        if (moveDirBuilder_ == null) {
          moveDirBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder>(
                  getMoveDir(),
                  getParentForChildren(),
                  isClean());
          moveDir_ = null;
        }
        return moveDirBuilder_;
      }

      private float radius_ ;
      /**
       * <code>optional float radius = 3;</code>
       */
      public float getRadius() {
        return radius_;
      }
      /**
       * <code>optional float radius = 3;</code>
       */
      public Builder setRadius(float value) {
        
        radius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float radius = 3;</code>
       */
      public Builder clearRadius() {
        
        radius_ = 0F;
        onChanged();
        return this;
      }

      private float speed_ ;
      /**
       * <code>optional float speed = 4;</code>
       */
      public float getSpeed() {
        return speed_;
      }
      /**
       * <code>optional float speed = 4;</code>
       */
      public Builder setSpeed(float value) {
        
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float speed = 4;</code>
       */
      public Builder clearSpeed() {
        
        speed_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.temas.aimaster.TargetInfo)
    }

    // @@protoc_insertion_point(class_scope:com.temas.aimaster.TargetInfo)
    private static final com.temas.aimaster.ServerInfo.TargetInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.temas.aimaster.ServerInfo.TargetInfo();
    }

    public static com.temas.aimaster.ServerInfo.TargetInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<TargetInfo> PARSER =
        new com.google.protobuf.AbstractParser<TargetInfo>() {
      public TargetInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new TargetInfo(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TargetInfo> getParserForType() {
      return PARSER;
    }

    public com.temas.aimaster.ServerInfo.TargetInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StoneInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.temas.aimaster.StoneInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
     */
    boolean hasPosition();
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
     */
    com.temas.aimaster.Common.Vector2 getPosition();
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
     */
    com.temas.aimaster.Common.Vector2OrBuilder getPositionOrBuilder();

    /**
     * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
     */
    boolean hasVelocity();
    /**
     * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
     */
    com.temas.aimaster.Common.Vector2 getVelocity();
    /**
     * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
     */
    com.temas.aimaster.Common.Vector2OrBuilder getVelocityOrBuilder();
  }
  /**
   * Protobuf type {@code com.temas.aimaster.StoneInfo}
   */
  public  static final class StoneInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.temas.aimaster.StoneInfo)
      StoneInfoOrBuilder {
    // Use StoneInfo.newBuilder() to construct.
    private StoneInfo(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private StoneInfo() {
      id_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private StoneInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 18: {
              com.temas.aimaster.Common.Vector2.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(com.temas.aimaster.Common.Vector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.temas.aimaster.Common.Vector2.Builder subBuilder = null;
              if (velocity_ != null) {
                subBuilder = velocity_.toBuilder();
              }
              velocity_ = input.readMessage(com.temas.aimaster.Common.Vector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(velocity_);
                velocity_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_StoneInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_StoneInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.temas.aimaster.ServerInfo.StoneInfo.class, com.temas.aimaster.ServerInfo.StoneInfo.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private com.temas.aimaster.Common.Vector2 position_;
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
     */
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
     */
    public com.temas.aimaster.Common.Vector2 getPosition() {
      return position_ == null ? com.temas.aimaster.Common.Vector2.getDefaultInstance() : position_;
    }
    /**
     * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
     */
    public com.temas.aimaster.Common.Vector2OrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int VELOCITY_FIELD_NUMBER = 3;
    private com.temas.aimaster.Common.Vector2 velocity_;
    /**
     * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
     */
    public boolean hasVelocity() {
      return velocity_ != null;
    }
    /**
     * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
     */
    public com.temas.aimaster.Common.Vector2 getVelocity() {
      return velocity_ == null ? com.temas.aimaster.Common.Vector2.getDefaultInstance() : velocity_;
    }
    /**
     * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
     */
    public com.temas.aimaster.Common.Vector2OrBuilder getVelocityOrBuilder() {
      return getVelocity();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (position_ != null) {
        output.writeMessage(2, getPosition());
      }
      if (velocity_ != null) {
        output.writeMessage(3, getVelocity());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPosition());
      }
      if (velocity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVelocity());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.temas.aimaster.ServerInfo.StoneInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.temas.aimaster.ServerInfo.StoneInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.StoneInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.temas.aimaster.ServerInfo.StoneInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.StoneInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.temas.aimaster.ServerInfo.StoneInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.StoneInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.temas.aimaster.ServerInfo.StoneInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.StoneInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.temas.aimaster.ServerInfo.StoneInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.temas.aimaster.ServerInfo.StoneInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.temas.aimaster.StoneInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.temas.aimaster.StoneInfo)
        com.temas.aimaster.ServerInfo.StoneInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_StoneInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_StoneInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.temas.aimaster.ServerInfo.StoneInfo.class, com.temas.aimaster.ServerInfo.StoneInfo.Builder.class);
      }

      // Construct using com.temas.aimaster.ServerInfo.StoneInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        if (velocityBuilder_ == null) {
          velocity_ = null;
        } else {
          velocity_ = null;
          velocityBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_StoneInfo_descriptor;
      }

      public com.temas.aimaster.ServerInfo.StoneInfo getDefaultInstanceForType() {
        return com.temas.aimaster.ServerInfo.StoneInfo.getDefaultInstance();
      }

      public com.temas.aimaster.ServerInfo.StoneInfo build() {
        com.temas.aimaster.ServerInfo.StoneInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.temas.aimaster.ServerInfo.StoneInfo buildPartial() {
        com.temas.aimaster.ServerInfo.StoneInfo result = new com.temas.aimaster.ServerInfo.StoneInfo(this);
        result.id_ = id_;
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (velocityBuilder_ == null) {
          result.velocity_ = velocity_;
        } else {
          result.velocity_ = velocityBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.temas.aimaster.ServerInfo.StoneInfo) {
          return mergeFrom((com.temas.aimaster.ServerInfo.StoneInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.temas.aimaster.ServerInfo.StoneInfo other) {
        if (other == com.temas.aimaster.ServerInfo.StoneInfo.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasVelocity()) {
          mergeVelocity(other.getVelocity());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.temas.aimaster.ServerInfo.StoneInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.temas.aimaster.ServerInfo.StoneInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private com.temas.aimaster.Common.Vector2 position_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder> positionBuilder_;
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
       */
      public com.temas.aimaster.Common.Vector2 getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? com.temas.aimaster.Common.Vector2.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
       */
      public Builder setPosition(com.temas.aimaster.Common.Vector2 value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
       */
      public Builder setPosition(
          com.temas.aimaster.Common.Vector2.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
       */
      public Builder mergePosition(com.temas.aimaster.Common.Vector2 value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              com.temas.aimaster.Common.Vector2.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
       */
      public com.temas.aimaster.Common.Vector2.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
       */
      public com.temas.aimaster.Common.Vector2OrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              com.temas.aimaster.Common.Vector2.getDefaultInstance() : position_;
        }
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 position = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private com.temas.aimaster.Common.Vector2 velocity_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder> velocityBuilder_;
      /**
       * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
       */
      public boolean hasVelocity() {
        return velocityBuilder_ != null || velocity_ != null;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
       */
      public com.temas.aimaster.Common.Vector2 getVelocity() {
        if (velocityBuilder_ == null) {
          return velocity_ == null ? com.temas.aimaster.Common.Vector2.getDefaultInstance() : velocity_;
        } else {
          return velocityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
       */
      public Builder setVelocity(com.temas.aimaster.Common.Vector2 value) {
        if (velocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocity_ = value;
          onChanged();
        } else {
          velocityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
       */
      public Builder setVelocity(
          com.temas.aimaster.Common.Vector2.Builder builderForValue) {
        if (velocityBuilder_ == null) {
          velocity_ = builderForValue.build();
          onChanged();
        } else {
          velocityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
       */
      public Builder mergeVelocity(com.temas.aimaster.Common.Vector2 value) {
        if (velocityBuilder_ == null) {
          if (velocity_ != null) {
            velocity_ =
              com.temas.aimaster.Common.Vector2.newBuilder(velocity_).mergeFrom(value).buildPartial();
          } else {
            velocity_ = value;
          }
          onChanged();
        } else {
          velocityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
       */
      public Builder clearVelocity() {
        if (velocityBuilder_ == null) {
          velocity_ = null;
          onChanged();
        } else {
          velocity_ = null;
          velocityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
       */
      public com.temas.aimaster.Common.Vector2.Builder getVelocityBuilder() {
        
        onChanged();
        return getVelocityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
       */
      public com.temas.aimaster.Common.Vector2OrBuilder getVelocityOrBuilder() {
        if (velocityBuilder_ != null) {
          return velocityBuilder_.getMessageOrBuilder();
        } else {
          return velocity_ == null ?
              com.temas.aimaster.Common.Vector2.getDefaultInstance() : velocity_;
        }
      }
      /**
       * <code>optional .com.temas.aimaster.Vector2 velocity = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder> 
          getVelocityFieldBuilder() {
        if (velocityBuilder_ == null) {
          velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.temas.aimaster.Common.Vector2, com.temas.aimaster.Common.Vector2.Builder, com.temas.aimaster.Common.Vector2OrBuilder>(
                  getVelocity(),
                  getParentForChildren(),
                  isClean());
          velocity_ = null;
        }
        return velocityBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.temas.aimaster.StoneInfo)
    }

    // @@protoc_insertion_point(class_scope:com.temas.aimaster.StoneInfo)
    private static final com.temas.aimaster.ServerInfo.StoneInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.temas.aimaster.ServerInfo.StoneInfo();
    }

    public static com.temas.aimaster.ServerInfo.StoneInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<StoneInfo> PARSER =
        new com.google.protobuf.AbstractParser<StoneInfo>() {
      public StoneInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new StoneInfo(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StoneInfo> getParserForType() {
      return PARSER;
    }

    public com.temas.aimaster.ServerInfo.StoneInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ModelTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.temas.aimaster.ModelType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
     */
    boolean hasTargetInfo();
    /**
     * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
     */
    com.temas.aimaster.ServerInfo.TargetInfo getTargetInfo();
    /**
     * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
     */
    com.temas.aimaster.ServerInfo.TargetInfoOrBuilder getTargetInfoOrBuilder();

    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    java.util.List<com.temas.aimaster.ServerInfo.StoneInfo> 
        getStonesList();
    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    com.temas.aimaster.ServerInfo.StoneInfo getStones(int index);
    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    int getStonesCount();
    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    java.util.List<? extends com.temas.aimaster.ServerInfo.StoneInfoOrBuilder> 
        getStonesOrBuilderList();
    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    com.temas.aimaster.ServerInfo.StoneInfoOrBuilder getStonesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.temas.aimaster.ModelType}
   */
  public  static final class ModelType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.temas.aimaster.ModelType)
      ModelTypeOrBuilder {
    // Use ModelType.newBuilder() to construct.
    private ModelType(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private ModelType() {
      timestamp_ = 0L;
      stones_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ModelType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 18: {
              com.temas.aimaster.ServerInfo.TargetInfo.Builder subBuilder = null;
              if (targetInfo_ != null) {
                subBuilder = targetInfo_.toBuilder();
              }
              targetInfo_ = input.readMessage(com.temas.aimaster.ServerInfo.TargetInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetInfo_);
                targetInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                stones_ = new java.util.ArrayList<com.temas.aimaster.ServerInfo.StoneInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              stones_.add(input.readMessage(com.temas.aimaster.ServerInfo.StoneInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          stones_ = java.util.Collections.unmodifiableList(stones_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_ModelType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_ModelType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.temas.aimaster.ServerInfo.ModelType.class, com.temas.aimaster.ServerInfo.ModelType.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int TARGETINFO_FIELD_NUMBER = 2;
    private com.temas.aimaster.ServerInfo.TargetInfo targetInfo_;
    /**
     * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
     */
    public boolean hasTargetInfo() {
      return targetInfo_ != null;
    }
    /**
     * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
     */
    public com.temas.aimaster.ServerInfo.TargetInfo getTargetInfo() {
      return targetInfo_ == null ? com.temas.aimaster.ServerInfo.TargetInfo.getDefaultInstance() : targetInfo_;
    }
    /**
     * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
     */
    public com.temas.aimaster.ServerInfo.TargetInfoOrBuilder getTargetInfoOrBuilder() {
      return getTargetInfo();
    }

    public static final int STONES_FIELD_NUMBER = 3;
    private java.util.List<com.temas.aimaster.ServerInfo.StoneInfo> stones_;
    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    public java.util.List<com.temas.aimaster.ServerInfo.StoneInfo> getStonesList() {
      return stones_;
    }
    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    public java.util.List<? extends com.temas.aimaster.ServerInfo.StoneInfoOrBuilder> 
        getStonesOrBuilderList() {
      return stones_;
    }
    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    public int getStonesCount() {
      return stones_.size();
    }
    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    public com.temas.aimaster.ServerInfo.StoneInfo getStones(int index) {
      return stones_.get(index);
    }
    /**
     * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
     */
    public com.temas.aimaster.ServerInfo.StoneInfoOrBuilder getStonesOrBuilder(
        int index) {
      return stones_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      if (targetInfo_ != null) {
        output.writeMessage(2, getTargetInfo());
      }
      for (int i = 0; i < stones_.size(); i++) {
        output.writeMessage(3, stones_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (targetInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTargetInfo());
      }
      for (int i = 0; i < stones_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, stones_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.temas.aimaster.ServerInfo.ModelType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.temas.aimaster.ServerInfo.ModelType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.ModelType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.temas.aimaster.ServerInfo.ModelType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.ModelType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.temas.aimaster.ServerInfo.ModelType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.ModelType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.temas.aimaster.ServerInfo.ModelType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.temas.aimaster.ServerInfo.ModelType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.temas.aimaster.ServerInfo.ModelType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.temas.aimaster.ServerInfo.ModelType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.temas.aimaster.ModelType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.temas.aimaster.ModelType)
        com.temas.aimaster.ServerInfo.ModelTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_ModelType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_ModelType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.temas.aimaster.ServerInfo.ModelType.class, com.temas.aimaster.ServerInfo.ModelType.Builder.class);
      }

      // Construct using com.temas.aimaster.ServerInfo.ModelType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStonesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        if (targetInfoBuilder_ == null) {
          targetInfo_ = null;
        } else {
          targetInfo_ = null;
          targetInfoBuilder_ = null;
        }
        if (stonesBuilder_ == null) {
          stones_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          stonesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.temas.aimaster.ServerInfo.internal_static_com_temas_aimaster_ModelType_descriptor;
      }

      public com.temas.aimaster.ServerInfo.ModelType getDefaultInstanceForType() {
        return com.temas.aimaster.ServerInfo.ModelType.getDefaultInstance();
      }

      public com.temas.aimaster.ServerInfo.ModelType build() {
        com.temas.aimaster.ServerInfo.ModelType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.temas.aimaster.ServerInfo.ModelType buildPartial() {
        com.temas.aimaster.ServerInfo.ModelType result = new com.temas.aimaster.ServerInfo.ModelType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.timestamp_ = timestamp_;
        if (targetInfoBuilder_ == null) {
          result.targetInfo_ = targetInfo_;
        } else {
          result.targetInfo_ = targetInfoBuilder_.build();
        }
        if (stonesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            stones_ = java.util.Collections.unmodifiableList(stones_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.stones_ = stones_;
        } else {
          result.stones_ = stonesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.temas.aimaster.ServerInfo.ModelType) {
          return mergeFrom((com.temas.aimaster.ServerInfo.ModelType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.temas.aimaster.ServerInfo.ModelType other) {
        if (other == com.temas.aimaster.ServerInfo.ModelType.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasTargetInfo()) {
          mergeTargetInfo(other.getTargetInfo());
        }
        if (stonesBuilder_ == null) {
          if (!other.stones_.isEmpty()) {
            if (stones_.isEmpty()) {
              stones_ = other.stones_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureStonesIsMutable();
              stones_.addAll(other.stones_);
            }
            onChanged();
          }
        } else {
          if (!other.stones_.isEmpty()) {
            if (stonesBuilder_.isEmpty()) {
              stonesBuilder_.dispose();
              stonesBuilder_ = null;
              stones_ = other.stones_;
              bitField0_ = (bitField0_ & ~0x00000004);
              stonesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStonesFieldBuilder() : null;
            } else {
              stonesBuilder_.addAllMessages(other.stones_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.temas.aimaster.ServerInfo.ModelType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.temas.aimaster.ServerInfo.ModelType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.temas.aimaster.ServerInfo.TargetInfo targetInfo_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.ServerInfo.TargetInfo, com.temas.aimaster.ServerInfo.TargetInfo.Builder, com.temas.aimaster.ServerInfo.TargetInfoOrBuilder> targetInfoBuilder_;
      /**
       * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
       */
      public boolean hasTargetInfo() {
        return targetInfoBuilder_ != null || targetInfo_ != null;
      }
      /**
       * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
       */
      public com.temas.aimaster.ServerInfo.TargetInfo getTargetInfo() {
        if (targetInfoBuilder_ == null) {
          return targetInfo_ == null ? com.temas.aimaster.ServerInfo.TargetInfo.getDefaultInstance() : targetInfo_;
        } else {
          return targetInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
       */
      public Builder setTargetInfo(com.temas.aimaster.ServerInfo.TargetInfo value) {
        if (targetInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetInfo_ = value;
          onChanged();
        } else {
          targetInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
       */
      public Builder setTargetInfo(
          com.temas.aimaster.ServerInfo.TargetInfo.Builder builderForValue) {
        if (targetInfoBuilder_ == null) {
          targetInfo_ = builderForValue.build();
          onChanged();
        } else {
          targetInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
       */
      public Builder mergeTargetInfo(com.temas.aimaster.ServerInfo.TargetInfo value) {
        if (targetInfoBuilder_ == null) {
          if (targetInfo_ != null) {
            targetInfo_ =
              com.temas.aimaster.ServerInfo.TargetInfo.newBuilder(targetInfo_).mergeFrom(value).buildPartial();
          } else {
            targetInfo_ = value;
          }
          onChanged();
        } else {
          targetInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
       */
      public Builder clearTargetInfo() {
        if (targetInfoBuilder_ == null) {
          targetInfo_ = null;
          onChanged();
        } else {
          targetInfo_ = null;
          targetInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
       */
      public com.temas.aimaster.ServerInfo.TargetInfo.Builder getTargetInfoBuilder() {
        
        onChanged();
        return getTargetInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
       */
      public com.temas.aimaster.ServerInfo.TargetInfoOrBuilder getTargetInfoOrBuilder() {
        if (targetInfoBuilder_ != null) {
          return targetInfoBuilder_.getMessageOrBuilder();
        } else {
          return targetInfo_ == null ?
              com.temas.aimaster.ServerInfo.TargetInfo.getDefaultInstance() : targetInfo_;
        }
      }
      /**
       * <code>optional .com.temas.aimaster.TargetInfo targetInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.temas.aimaster.ServerInfo.TargetInfo, com.temas.aimaster.ServerInfo.TargetInfo.Builder, com.temas.aimaster.ServerInfo.TargetInfoOrBuilder> 
          getTargetInfoFieldBuilder() {
        if (targetInfoBuilder_ == null) {
          targetInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.temas.aimaster.ServerInfo.TargetInfo, com.temas.aimaster.ServerInfo.TargetInfo.Builder, com.temas.aimaster.ServerInfo.TargetInfoOrBuilder>(
                  getTargetInfo(),
                  getParentForChildren(),
                  isClean());
          targetInfo_ = null;
        }
        return targetInfoBuilder_;
      }

      private java.util.List<com.temas.aimaster.ServerInfo.StoneInfo> stones_ =
        java.util.Collections.emptyList();
      private void ensureStonesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          stones_ = new java.util.ArrayList<com.temas.aimaster.ServerInfo.StoneInfo>(stones_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.temas.aimaster.ServerInfo.StoneInfo, com.temas.aimaster.ServerInfo.StoneInfo.Builder, com.temas.aimaster.ServerInfo.StoneInfoOrBuilder> stonesBuilder_;

      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public java.util.List<com.temas.aimaster.ServerInfo.StoneInfo> getStonesList() {
        if (stonesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stones_);
        } else {
          return stonesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public int getStonesCount() {
        if (stonesBuilder_ == null) {
          return stones_.size();
        } else {
          return stonesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public com.temas.aimaster.ServerInfo.StoneInfo getStones(int index) {
        if (stonesBuilder_ == null) {
          return stones_.get(index);
        } else {
          return stonesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public Builder setStones(
          int index, com.temas.aimaster.ServerInfo.StoneInfo value) {
        if (stonesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStonesIsMutable();
          stones_.set(index, value);
          onChanged();
        } else {
          stonesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public Builder setStones(
          int index, com.temas.aimaster.ServerInfo.StoneInfo.Builder builderForValue) {
        if (stonesBuilder_ == null) {
          ensureStonesIsMutable();
          stones_.set(index, builderForValue.build());
          onChanged();
        } else {
          stonesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public Builder addStones(com.temas.aimaster.ServerInfo.StoneInfo value) {
        if (stonesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStonesIsMutable();
          stones_.add(value);
          onChanged();
        } else {
          stonesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public Builder addStones(
          int index, com.temas.aimaster.ServerInfo.StoneInfo value) {
        if (stonesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStonesIsMutable();
          stones_.add(index, value);
          onChanged();
        } else {
          stonesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public Builder addStones(
          com.temas.aimaster.ServerInfo.StoneInfo.Builder builderForValue) {
        if (stonesBuilder_ == null) {
          ensureStonesIsMutable();
          stones_.add(builderForValue.build());
          onChanged();
        } else {
          stonesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public Builder addStones(
          int index, com.temas.aimaster.ServerInfo.StoneInfo.Builder builderForValue) {
        if (stonesBuilder_ == null) {
          ensureStonesIsMutable();
          stones_.add(index, builderForValue.build());
          onChanged();
        } else {
          stonesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public Builder addAllStones(
          java.lang.Iterable<? extends com.temas.aimaster.ServerInfo.StoneInfo> values) {
        if (stonesBuilder_ == null) {
          ensureStonesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stones_);
          onChanged();
        } else {
          stonesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public Builder clearStones() {
        if (stonesBuilder_ == null) {
          stones_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          stonesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public Builder removeStones(int index) {
        if (stonesBuilder_ == null) {
          ensureStonesIsMutable();
          stones_.remove(index);
          onChanged();
        } else {
          stonesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public com.temas.aimaster.ServerInfo.StoneInfo.Builder getStonesBuilder(
          int index) {
        return getStonesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public com.temas.aimaster.ServerInfo.StoneInfoOrBuilder getStonesOrBuilder(
          int index) {
        if (stonesBuilder_ == null) {
          return stones_.get(index);  } else {
          return stonesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public java.util.List<? extends com.temas.aimaster.ServerInfo.StoneInfoOrBuilder> 
           getStonesOrBuilderList() {
        if (stonesBuilder_ != null) {
          return stonesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stones_);
        }
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public com.temas.aimaster.ServerInfo.StoneInfo.Builder addStonesBuilder() {
        return getStonesFieldBuilder().addBuilder(
            com.temas.aimaster.ServerInfo.StoneInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public com.temas.aimaster.ServerInfo.StoneInfo.Builder addStonesBuilder(
          int index) {
        return getStonesFieldBuilder().addBuilder(
            index, com.temas.aimaster.ServerInfo.StoneInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.temas.aimaster.StoneInfo stones = 3;</code>
       */
      public java.util.List<com.temas.aimaster.ServerInfo.StoneInfo.Builder> 
           getStonesBuilderList() {
        return getStonesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.temas.aimaster.ServerInfo.StoneInfo, com.temas.aimaster.ServerInfo.StoneInfo.Builder, com.temas.aimaster.ServerInfo.StoneInfoOrBuilder> 
          getStonesFieldBuilder() {
        if (stonesBuilder_ == null) {
          stonesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.temas.aimaster.ServerInfo.StoneInfo, com.temas.aimaster.ServerInfo.StoneInfo.Builder, com.temas.aimaster.ServerInfo.StoneInfoOrBuilder>(
                  stones_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          stones_ = null;
        }
        return stonesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.temas.aimaster.ModelType)
    }

    // @@protoc_insertion_point(class_scope:com.temas.aimaster.ModelType)
    private static final com.temas.aimaster.ServerInfo.ModelType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.temas.aimaster.ServerInfo.ModelType();
    }

    public static com.temas.aimaster.ServerInfo.ModelType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<ModelType> PARSER =
        new com.google.protobuf.AbstractParser<ModelType>() {
      public ModelType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new ModelType(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ModelType> getParserForType() {
      return PARSER;
    }

    public com.temas.aimaster.ServerInfo.ModelType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_temas_aimaster_TargetInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_temas_aimaster_TargetInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_temas_aimaster_StoneInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_temas_aimaster_StoneInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_temas_aimaster_ModelType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_temas_aimaster_ModelType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020ServerInfo.proto\022\022com.temas.aimaster\032\014" +
      "common.proto\"\210\001\n\nTargetInfo\022-\n\010position\030" +
      "\001 \001(\0132\033.com.temas.aimaster.Vector2\022,\n\007mo" +
      "veDir\030\002 \001(\0132\033.com.temas.aimaster.Vector2" +
      "\022\016\n\006radius\030\003 \001(\002\022\r\n\005speed\030\004 \001(\002\"u\n\tStone" +
      "Info\022\n\n\002id\030\001 \001(\005\022-\n\010position\030\002 \001(\0132\033.com" +
      ".temas.aimaster.Vector2\022-\n\010velocity\030\003 \001(" +
      "\0132\033.com.temas.aimaster.Vector2\"\201\001\n\tModel" +
      "Type\022\021\n\ttimestamp\030\001 \001(\003\0222\n\ntargetInfo\030\002 " +
      "\001(\0132\036.com.temas.aimaster.TargetInfo\022-\n\006s",
      "tones\030\003 \003(\0132\035.com.temas.aimaster.StoneIn" +
      "foP\000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.temas.aimaster.Common.getDescriptor(),
        }, assigner);
    internal_static_com_temas_aimaster_TargetInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_temas_aimaster_TargetInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_temas_aimaster_TargetInfo_descriptor,
        new java.lang.String[] { "Position", "MoveDir", "Radius", "Speed", });
    internal_static_com_temas_aimaster_StoneInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_temas_aimaster_StoneInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_temas_aimaster_StoneInfo_descriptor,
        new java.lang.String[] { "Id", "Position", "Velocity", });
    internal_static_com_temas_aimaster_ModelType_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_temas_aimaster_ModelType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_temas_aimaster_ModelType_descriptor,
        new java.lang.String[] { "Timestamp", "TargetInfo", "Stones", });
    com.temas.aimaster.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
